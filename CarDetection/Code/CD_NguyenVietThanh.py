# -*- coding: utf-8 -*-
"""Nhom19_BaoCaoMonHoc.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Bq52_2KazX4LYDtYli_YHXmgu-pALriv
"""

pip install ultralytics

from google.colab import drive
drive.mount('/content/drive')

# Commented out IPython magic to ensure Python compatibility.
!git clone https://github.com/ultralytics/yolov5.git

# %cd yolov5/

!pip install -r requirements.txt

pip install pyyaml

# lệnh shell rm (remove)
!rm -r "/content/drive/MyDrive/car-detection-1"

!pip install roboflow

from roboflow import Roboflow
rf = Roboflow(api_key="mclLHXcZODPiI3gS6M3W")
project = rf.workspace("mit-ivmqi").project("car-detection-xpuvx")
dataset = project.version(3).download("yolov5")

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive/yolov5

!pip install -r requirements.txt

# Huấn luyện mô hình YOLOv5 trên tập dữ liệu Car Detection 3.
!python /content/drive/MyDrive/yolov5/train.py --img 640 --batch 16 --epochs 50 --data /content/drive/MyDrive/yolov5/Car-detection-3/data.yaml --weights yolov5s.pt

# !python: là dòng lệnh chạy python
# train.py: Là tên của file python chứa các lệnh để huấn luyện mô hình YOLOv5.
# --img 640: Kích thước ảnh đầu vào để huấn luyện là 640x640 pixel.
# --batch 16: Kích thước batch size là 16.
# --epochs 50: Số lượng epochs để huấn luyện là 50.
# --data /content/drive/MyDrive/yolov5/Car-detection-3/data.yaml:  Đường dẫn đến file data.yaml chứa thông tin về dataset, các class và đường dẫn tới các tệp ảnh và tệp nhãn.
# --weights yolov5s.pt(file trọng số yolov5s): Đường dẫn tới file trọng số của mô hình YOLOv5s (một trong các phiên bản nhỏ nhất của YOLOv5).

# Chạy tập lệnh phát hiện YOLOv5 (detect.py) bằng cách sử dụng mô hình được đào tạo (best.pt) 
# và phát hiện các đối tượng trong hình ảnh có trong thư mục đã chỉ định
!python "/content/drive/MyDrive/yolov5/detect.py" --weights "/content/drive/MyDrive/yolov5/runs/train/exp4/weights/best.pt" --img 640 --conf 0.25 --source "/content/drive/MyDrive/yolov5/Car-detection-3/test/images"

# !python: là dòng lệnh chạy python
# --weights: Chỉ định đường dẫn đến mô hình YOLOv5 đã đào tạo (best.pt) sẽ được sử dụng để phát hiện đối tượng.
# --img 640: Đặt kích thước hình ảnh đầu vào để phát hiện đối tượng.
# --conf 0.25: Đặt ngưỡng tin cậy để phát hiện đối tượng. 
# Các đối tượng được phát hiện có điểm tin cậy thấp hơn 0,25 sẽ bị lọc ra.
# --source: Chỉ định thư mục chứa các hình ảnh thử nghiệm để phát hiện đối tượng.

"""Vậy file best.pt là gì?
-> File best.pt là tập tin chứa trọng số của mô hình tốt nhất được lưu lại trong quá trình huấn luyện. Khi mô hình được huấn luyện, trọng số của nó sẽ được cập nhật liên tục theo từng epoch. Tập tin best.pt sẽ lưu lại trọng số tương ứng với epoch nào đó mà mô hình có hiệu suất tốt nhất trên tập dữ liệu kiểm tra (validation set). Nó được sử dụng để tải lại trọng số của mô hình đã được huấn luyện trước đó và sử dụng để tiếp tục huấn luyện hoặc để dự đoán trên các bộ dữ liệu mới.

Sau khi train mô hình YOLOv5, chúng ta sẽ có một mô hình đã được đào tạo để phát hiện các đối tượng trong hình ảnh. Tuy nhiên, để sử dụng mô hình này để phát hiện đối tượng trong các hình ảnh mới, chúng ta cần thực hiện quá trình dự đoán (inference) trên các hình ảnh đó.

Việc sử dụng tập lệnh detect.py và mô hình được đào tạo (best.pt) sẽ giúp cho việc thực hiện dự đoán trên các hình ảnh mới trở nên dễ dàng hơn. Để thực hiện phát hiện đối tượng trên các hình ảnh mới, chúng ta chỉ cần đưa các hình ảnh đó vào thư mục được chỉ định và chạy tập lệnh detect.py với mô hình được đào tạo để tạo ra các kết quả phát hiện. Kết quả sẽ được lưu trữ trong các tệp ảnh mới tạo ra, cung cấp cho chúng ta thông tin về các đối tượng được phát hiện trong hình ảnh đó.
"""